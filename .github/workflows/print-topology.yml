name: Kafka Stream Topology Print
on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        required: true
      GPG_PASSPHRASE:
        required: true
    inputs:
      topologyFilePath:
        description: 'Path to the topology file'
        type: string
        required: false
        default: 'docs/topology/stream.txt'
      processorTopicsOutputFilePath:
        description: 'Path to the file to save extracted list of topics used in the processor.'
        type: string
        required: false
        default: 'docs/topics/processor-topics.txt'
      readmeFilePath:
        description: 'Path to the README file'
        type: string
        required: false
        default: 'README.md'
      applicationIds:
        description: 'List of application ids (processor with multiple processing-functions will have many) provided as a JSON array string. For example: ["application-1", "application-2"].'
        type: string
        required: false
        default: '[]'

jobs:
  update-readme-topology:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        uses: extenda/actions/setup-git@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch
        run: |
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update README & Collect topics, state store names and application ids
        uses: extenda/shared-workflows/composite-actions/nodejs-script/print-topology@v0
        with:
          topology-file-path : ${{ inputs.topologyFilePath }}
          processor-topics-output-file-path : ${{ inputs.processorTopicsOutputFilePath }}
          readme-file-path : ${{ inputs.readmeFilePath }}
          application-ids : ${{ inputs.applicationIds }}

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v5.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true

      - name: Commit and Push Changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git -c user.name="Extenda-DevOps-Bot" -c user.email="devops_team@extenda.se" commit -S -m "Update ${{ inputs.readmeFilePath }}  topology"
            git push origin HEAD:${{ github.ref }}
          else
            echo "No changes to commit."
          fi