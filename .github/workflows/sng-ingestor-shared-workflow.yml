on:
  workflow_call:
    secrets:
      secret-auth:
        description: 'SECRET_AUTH value from secrets'
        required: true
      gcloud-auth-staging:
        description: 'GCLOUD_AUTH_STAGING value from secrets'
        required: true
      gcloud-auth-prod:
        description: 'GCLOUD_AUTH_PROD value from secrets'
        required: true
    inputs:
      gcr-image-name:
        description: |
          Google Container Registry Docker image name
        type: string
        required: true
      service-name:
        description: |
          Service name in GCP
        type: string
        required: true
      dockerfile-path:
        description: |
          Path to Dockerfile
        type: string
        required: true
      system-name:
        description: |
          System name (sng or mcp)
        type: string
        required: true
      use-acceptance:
        description: |
          Use acceptance
        type: boolean
        required: true
      acceptance-base-url:
        description: |
          Base URL of the service against which to run acceptance tests. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-postman-collection-path:
        description: |
          Path to Postman collection. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-postman-environment-path:
        description: |
          Path to Postman environment variables. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-globals-path:
        description: |
          Path to globals.json. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      release-name:
        type: string
        required: true
      product-name:
        type: string
        required: true
      product-component:
        type: string
        required: true
      jira-project-key:
        type: string
        required: true
      release-to-prod:
        type: boolean
        required: false
      publish-openapi:
        type: boolean
        required: false
      openapi-file-path:
        type: string
        required: false
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extenda/actions/opa-policy-test@v0
        with:
          service-account-key: ${{ secrets.gcloud-auth-staging }}

  docker-build:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image
        uses: extenda/shared-workflows/composite-actions/sng-docker-build@master
        with:
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          dockerfile-path: ${{ inputs.dockerfile-path }}
          gcr-image-name: ${{ inputs.gcr-image-name }}

  staging:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to staging
        uses: extenda/shared-workflows/composite-actions/sng-deploy-to-staging@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          gcr-image-name: ${{ inputs.gcr-image-name }}

  acceptance:
    if: ${{ inputs.use-acceptance }}
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: ${{ inputs.acceptance-globals-path }}
          json: '{ "values": [ { "key": "baseUrl", "value": "${{ inputs.acceptance-base-url }}", "enabled": true}] }'

      - name: Acceptance tests
        uses: matt-ball/newman-action@0.0.28
        with:
          collection: ${{ inputs.acceptance-postman-collection-path }}
          environment: ${{ inputs.acceptance-postman-environment-path }}
          globals: ${{ inputs.acceptance-globals-path }}
  
  release:
    if: |
      always() &&
      (needs.acceptance.result == 'success' || needs.acceptance.result == 'skipped') &&
      (needs.staging.result == 'success')
    runs-on: ubuntu-latest
    needs: [staging, acceptance]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to production
        uses: extenda/shared-workflows/composite-actions/sng-deploy-to-production@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-prod: ${{ secrets.gcloud-auth-prod }}
          gcr-image-name: ${{ inputs.gcr-image-name }}
          service-name: ${{ inputs.service-name }}
          system-name: ${{ inputs.system-name }}
          release-name: ${{ inputs.release-name }}
          product-name: ${{ inputs.product-name }}
          product-component: ${{ inputs.product-component }}

  publish-openapi:
    if: |
      always() &&
      (needs.acceptance.result == 'success' || needs.acceptance.result == 'skipped') &&
      (needs.release.result == 'success' || needs.release.result == 'skipped') &&
      (needs.staging.result == 'success') &&
      inputs.publish-openapi
    runs-on: ubuntu-latest
    needs: [staging, acceptance, release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: extenda/actions/setup-gcloud@v0
        id: gcloud
        with:
          service-account-key: ${{ secrets.gcloud-auth-prod }}
          
      - name: Publish OpenAPI
        uses: extenda/actions/publish-openapi@v0
        with:
          openapi: ${{ inputs.openapi-file-path }}
          api-name: ${{ inputs.service-name }}
          system-name: ${{ inputs.system-name }}
          release-tag: v1.0.0