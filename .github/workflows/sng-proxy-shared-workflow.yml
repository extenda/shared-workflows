on:
  workflow_call:
    secrets:
      secret-auth:
        description: 'SECRET_AUTH value from secrets'
        required: true
      gcloud-auth-staging:
        description: 'GCLOUD_AUTH_STAGING value from secrets'
        required: true
      gcloud-auth-prod:
        description: 'GCLOUD_AUTH_PROD value from secrets'
        required: true
    inputs:
      gcr-image-name:
        description: |
          Google Container Registry Docker image name
        type: string
        required: true
      service-name:
        description: |
          Service name in GCP
        type: string
        required: true
      dockerfile-path:
        description: |
          Path to Dockerfile
        type: string
        required: true
      system-name:
        description: |
          System name (sng or mcp)
        type: string
        required: true
      use-acceptance:
        description: |
          Use acceptance
        type: boolean
        required: true
      acceptance-base-url:
        description: |
          Base URL of the service against which to run acceptance tests. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-postman-collection-path:
        description: |
          Path to Postman collection. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-postman-environment-path:
        description: |
          Path to Postman environment variables. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      acceptance-globals-path:
        description: |
          Path to globals.json. Must be set when 'use-acceptance' is 'true'
        type: string
        required: true
      release-name:
        type: string
        required: true
      product-name:
        type: string
        required: true
      product-component:
        type: string
        required: true
      jira-project-key:
        type: string
        required: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extenda/actions/opa-policy-test@v0
        with:
          service-account-key: ${{ secrets.gcloud-auth-staging }}

  staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image
        uses: extenda/shared-workflows/composite-actions/docker-build@master
        with:
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          dockerfile-path: ${{ inputs.dockerfile-path }}
          gcr-image-name: ${{ inputs.gcr-image-name }}

      - name: Deploy to staging
        uses: extenda/actions/cloud-deploy@v0
        with:
          secrets-account-key: ${{ secrets.secret-auth }}
          service-account-key: ${{ secrets.gcloud-auth-staging }}
          image: eu.gcr.io/extenda/${{ inputs.gcr-image-name }}:${{ github.sha }}
          update-dns: always

  acceptance:
    if: ${{ inputs.use-acceptance }}
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: ${{ inputs.acceptance-globals-path }}
          json: '{ "values": [ { "key": "baseUrl", "value": "${{ inputs.acceptance-base-url }}", "enabled": true}] }'

      - name: Acceptance tests
        uses: matt-ball/newman-action@0.0.28
        with:
          collection: ${{ inputs.acceptance-postman-collection-path }}
          environment: ${{ inputs.acceptance-postman-environment-path }}
          globals: ${{ inputs.acceptance-globals-path }}
  
  release:
    if: |
      always() &&
      (needs.acceptance.result == 'success' || needs.acceptance.result == 'skipped') &&
      (needs.staging.result == 'success')
    runs-on: ubuntu-latest
    needs: [staging, acceptance]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extenda/actions/gcp-secret-manager@v0
        with:
          service-account-key: ${{ secrets.secret-auth }}
          secrets: |
            GITHUB-TOKEN: github-token

      - name: Create release
        uses: extenda/actions/conventional-release@v0
        id: semver
        with:
          name: ${{ inputs.release-name }}
        env:
          GITHUB_TOKEN: ${{ env.GITHUB-TOKEN }}

      - uses: extenda/actions/setup-gcloud@v0
        with:
          service-account-key: ${{ secrets.gcloud-auth-prod }}

      - name: Add tag in GCR
        run: |
          gcloud container images add-tag \
            eu.gcr.io/extenda/${{ inputs.gcr-image-name }}:${{ github.sha }} \
            eu.gcr.io/extenda/${{ inputs.gcr-image-name }}:${{ steps.semver.outputs.release-tag }}

  deploy:
    if: |
      always() &&
      (needs.acceptance.result == 'success' || needs.acceptance.result == 'skipped') &&
      (needs.release.result == 'success' || needs.release.result == 'skipped') &&
      (needs.staging.result == 'success')
    runs-on: ubuntu-latest
    needs: [staging, acceptance, release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extenda/actions/gcp-secret-manager@v0
        with:
          service-account-key: ${{ secrets.secret-auth }}
          secrets: |
            JIRA_USERNAME: jira-username
            JIRA_PASSWORD: jira-password
            STYRA_TOKEN: styra-das-token

      - uses: extenda/actions/conventional-version@v0
        id: semver

      - uses: extenda/actions/setup-gcloud@v0
        id: gcloud
        with:
          service-account-key: ${{ secrets.gcloud-auth-prod }}

      - name: Deploy to Styra DAS Production
        uses: extenda/actions/styra-das-deploy@v0
        with:
          styra-das-token: ${{ env.STYRA_TOKEN }}
          permission-prefix: ${{ inputs.system-name }}
          service-name: ${{ inputs.service-name }}

      - name: Deploy to production
        uses: extenda/actions/cloud-deploy@v0
        with:
          secrets-account-key: ${{ secrets.secret-auth }}
          service-account-key: ${{ secrets.gcloud-auth-prod }}
          image: eu.gcr.io/extenda/${{ inputs.gcr-image-name }}:${{ steps.semver.outputs.release-tag }}
          update-dns: always

      - uses: extenda/actions/dora-metrics@v0
        with:
          product-name: ${{ inputs.product-name }}
          product-component: ${{ inputs.product-component }}
          jira-username: ${{ env.JIRA_USERNAME }}
          jira-password: ${{ env.JIRA_PASSWORD }}
          jira-project-key: ${{ inputs.jira-project-key }}