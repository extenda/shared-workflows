on:
  workflow_call:
    secrets:
      secret-auth:
        description: "SECRET_AUTH value from secrets"
        required: true
      gcloud-auth-staging:
        description: "GCLOUD_AUTH_STAGING value from secrets"
        required: true
      gcloud-auth-prod:
        description: "GCLOUD_AUTH_PROD value from secrets"
        required: true
      sql-password:
        description: "MSSQL 'sa' password (needed when running tests). Must be set when 'start-sql' input parameter is 'true'"
        required: false
    inputs:
      gcr-image-name:
        description: |
          Google Container Registry Docker image name
        type: string
        required: true
      service-name:
        description: |
          Service name in GCP
        type: string
        required: true
      sln-path:
        description: |
          Path to solution file
        type: string
        required: true
      dockerfile-path:
        description: |
          Path to Dockerfile
        type: string
        required: true
      system-name:
        description: |
          System name (sng or mcp)
        type: string
        required: false
        default: "sng"
      use-scanngo-acceptance:
        description: |
          Use scanngo acceptance action
        type: boolean
        required: false
      acceptance-username:
        description: |
          Acceptance username. Must be set when 'use-scanngo-acceptance' is 'true'
        type: string
        required: false
      use-mcpe-acceptance:
        description: |
          Use mcpe acceptance action
        type: boolean
        required: false
      acceptance-mcpe-base-url:
        description: |
          Base URL of the service against which to run acceptance tests. Must be set when 'use-mcpe-acceptance' is 'true'
        type: string
        required: false
      acceptance-mcpe-postman-collection-path:
        description: |
          Path to Postman collection. Must be set when 'use-mcpe-acceptance' is 'true'
        type: string
        required: false
      acceptance-mcpe-postman-environment-path:
        description: |
          Path to Postman environment variables. Must be set when 'use-mcpe-acceptance' is 'true'
        type: string
        required: false
      acceptance-mcpe-globals-path:
        description: |
          Path to globals.json. Must be set when 'use-mcpe-acceptance' is 'true'
        type: string
        required: false
      models-project-path:
        description: |
          Path to *.csproj file which contains the models. Must be set when 'pack-models' is 'true'
        type: string
        required: false
      start-sql:
        type: boolean
        required: false
      start-redis:
        type: boolean
        required: false
      release-name:
        type: string
        required: false
        default: "Release"
      product-name:
        type: string
        required: false
        default: "Scan & Go"
      product-component:
        type: string
        required: false
        default: "scanngo"
      config-nuget:
        type: boolean
        required: false
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Redis
        if: ${{ inputs.start-redis }}
        shell: bash
        run: docker container run --name redis --rm -d -p 6379:6379 redis:6

      - name: Start SQL
        if: ${{ inputs.start-sql }}
        shell: bash
        run: |
          docker run --rm -d -p 5433:1433 -e ACCEPT_EULA=Y -e MSSQL_SA_PASSWORD="${{ secrets.sql-password }}" --name sql-server mcr.microsoft.com/mssql/server:2017-latest

      - name: Build and test
        uses: extenda/shared-workflows/composite-actions/sng-build-and-test@master
        with:
          sln-path: ${{ inputs.sln-path }}
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}

      - name: Stop Redis
        if: ${{ inputs.start-redis }}
        shell: bash
        run: docker container stop redis

      - name: Stop SQL server
        if: ${{ inputs.start-sql }}
        shell: bash
        run: docker stop sql-server

  pack:
    if: ${{ inputs.models-project-path != '' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pack and upload service models
        uses: extenda/shared-workflows/composite-actions/sng-pack-and-upload@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          csproj-path: ${{ inputs.models-project-path }}

  docker-build:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: NuGet config
        if: ${{ inputs.config-nuget }}
        uses: extenda/shared-workflows/composite-actions/sng-nuget-config@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
      
      - name: Build Docker image
        uses: extenda/shared-workflows/composite-actions/sng-docker-build@master
        with:
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          dockerfile-path: ${{ inputs.dockerfile-path }}
          gcr-image-name: ${{ inputs.gcr-image-name }}

  staging:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to staging
        uses: extenda/shared-workflows/composite-actions/sng-deploy-to-staging@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          gcr-image-name: ${{ inputs.gcr-image-name }}

  acceptance:
    if: ${{ inputs.use-scanngo-acceptance || inputs.use-mcpe-acceptance }}
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Acceptance
        if: ${{ inputs.use-scanngo-acceptance }}
        uses: extenda/shared-workflows/composite-actions/sng-acceptance@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          acceptance-username: ${{ inputs.acceptance-username }}

      - name: Acceptance MCPE
        if: ${{ inputs.use-mcpe-acceptance }}
        uses: extenda/shared-workflows/composite-actions/sng-acceptance-mcpe@master
        with:
          gcloud-auth-staging: ${{ secrets.gcloud-auth-staging }}
          acceptance-mcpe-base-url: ${{ inputs.acceptance-mcpe-base-url }}
          acceptance-mcpe-postman-collection-path: ${{ inputs.acceptance-mcpe-postman-collection-path }}
          acceptance-mcpe-postman-environment-path: ${{ inputs.acceptance-mcpe-postman-environment-path }}
          acceptance-mcpe-globals-path: ${{ inputs.acceptance-mcpe-globals-path }}

  production:
    runs-on: ubuntu-latest
    needs: acceptance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to production
        uses: extenda/shared-workflows/composite-actions/sng-deploy-to-production@master
        with:
          secret-auth: ${{ secrets.secret-auth }}
          gcloud-auth-prod: ${{ secrets.gcloud-auth-prod }}
          gcr-image-name: ${{ inputs.gcr-image-name }}
          service-name: ${{ inputs.service-name }}
          system-name: ${{ inputs.system-name }}
          release-name: ${{ inputs.release-name }}
          product-name: ${{ inputs.product-name }}
          product-component: ${{ inputs.product-component }}