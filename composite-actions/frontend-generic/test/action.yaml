name: 'Run test & build'
description: 'Run test & build for frontend service on pull request'
inputs:
  SECRET_AUTH:
    description: 'GCP Auth'
    required: true
  BUILD_TOOL:
    description: 'Build tool to use'
    required: true
runs: 
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Lint pull request title
      uses: extenda/actions/commitlint@v0
      with:
        message: ${{ github.event.pull_request.title }}

    - name: Determine version
      uses: extenda/actions/conventional-version@v0
      id: semver
      with:
        build-number: ${{ github.run_number }}

    - name: Cache node_modules
      uses: actions/cache@v3
      if: inputs.BUILD_TOOL == 'npm'
      id: cache-npm-node-modules
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules

    
    - name: Cache node_modules
      uses: actions/cache@v3
      if: inputs.BUILD_TOOL == 'yarn'
      id: cache-yarn-node-modules
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules

    - name: Cache Sonar binary
      uses: actions/cache@v3
      env:
        cache-name: cache-sonar-binary
      with:
        path: /home/runner/.sonar/native-sonar-scanner
        key: ${{ runner.os }}-cache-sonar-binary
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Auth to Nexus npm registry
      uses: extenda/actions/nexus-auth-npm@v0
      with:
        service-account-key: ${{ inputs.SECRET_AUTH }}

    - name: Install dependencies
      shell: bash
      if: steps.cache-npm-node-modules.outputs.cache-hit != 'true' && inputs.BUILD_TOOL == 'npm' 
      run: npm ci

    - name: Lint
      shell: bash
      if: inputs.BUILD_TOOL == 'npm'
      run: npm run lint:ci

    - name: Run unit tests with coverage
      shell: bash
      if: inputs.BUILD_TOOL == 'npm'
      run: npm run test:cov

    - name: Build
      shell: bash
      if: inputs.BUILD_TOOL == 'npm'
      run: npm run build

    - name: Install dependencies
      shell: bash
      if: steps.cache-yarn-node-modules.outputs.cache-hit != 'true' && inputs.BUILD_TOOL == 'yarn' 
      run: yarn install --frozen-lockfile

    - name: Lint
      shell: bash
      if: inputs.BUILD_TOOL == 'yarn'
      run: yarn run lint:ci

    - name: Run unit tests with coverage
      shell: bash
      if: inputs.BUILD_TOOL == 'yarn'
      run: yarn run test:cov

    - name: Build
      shell: bash
      if: inputs.BUILD_TOOL == 'yarn'
      run: yarn run build

    - name: Analyze with SonarCloud
      uses: extenda/actions/sonar-scanner@v0
      with:
        sonar-host: https://sonarcloud.io
        service-account-key: ${{ inputs.SECRET_AUTH }}
        main-branch: master
