name: 'Acceptance'
description: 'Acceptance action for lossprevention services'

inputs:
  secret-auth:
    description: 'SECRET_AUTH value from secrets'
    required: true
  gcloud-auth:
    description: 'GCLOUD_AUTH_STAGING/GCLOUD_AUTH_PROD value from secrets based on the environment'
    required: true
  collections_folder:
    description: 'Folder to use collections'
    required: false
    default: './slp/tests/acceptance/'
  environment:
    description: 'Environment to use'
    required: false
    default: './slp/tests/acceptance/integration_test.staging.postman_environment.json'
  audiences:
    description: 'Audience for service account'
    required: false
    default: 'basketauditfrontend'

runs:
  using: 'composite'
  steps:
    - uses: extenda/actions/gcp-secret-manager@v0
      with:
        service-account-key: ${{ inputs.secret-auth }}
        secrets: |
          GITHUB-TOKEN: github-token

    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: extenda/selfservice-lossprevention-common
        path: 'slp'
        token: ${{ env.GITHUB-TOKEN }}

    - name: Set up GCloud
      uses: extenda/actions/setup-gcloud@v0
      id: gcloud
      with:
        service-account-key: ${{ inputs.gcloud-auth }}

    - name: Identity token
      uses: extenda/actions/identity-token@v0
      with:
        service-account-key: ${{ inputs.gcloud-auth }}
        service-account: ${{ inputs.audiences }}@${{ steps.gcloud.outputs.project-id }}.iam.gserviceaccount.com
        audiences: ${{ inputs.audiences }}

    - name: Acceptance tests
      shell: bash
      run: |
        npm install newman --no-save --silent
        readarray -t COLLECTIONS_ARRAY <<< "$(find "${{ inputs.collections_folder }}" -name '*.postman_collection.json' -type f)"
        for collection in "${COLLECTIONS_ARRAY[@]}"; do
          echo "Running tests for collection: $collection"
          npx newman run "$collection" \
            --environment ${{ inputs.environment }} \
            --env-var iamToken=$IDENTITY_TOKEN
        done
