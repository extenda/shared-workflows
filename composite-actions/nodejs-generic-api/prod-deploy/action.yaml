name: 'Deploy prod'
description: 'deploy prod'
inputs:
  SECRET_AUTH:
    description: 'GCP Auth'
    required: true 
  GCLOUD_AUTH:
    description: 'GCP Auth (staging)'
    required: true
  GITHUB_TOKEN:
    description: 'GH token to create a release'
  system:
    description: '3-letter service name'
    required: true
  service-name:
    description: 'Service name (same as in Styra & GCP)'
    required: true
  image:
    description: 'Image name for the service (without tag)'
    required: true

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: extenda/actions/gcp-secret-manager@v0
        with:
          service-account-key: ${{ inputs.SECRET_AUTH }}
          secrets: |
            STYRA_TOKEN: styra-das-token

      - name: DAS production deploy
        uses: extenda/actions/styra-das-deploy@v0
        with:
          permission-prefix: ${{ inputs.system }}
          service-name: ${{ inputs.service-name }}
          styra-das-token: ${{ env.STYRA_TOKEN }}

      - name: Create release
        uses: extenda/actions/conventional-release@v0
        id: release
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

      - uses: extenda/actions/setup-gcloud@v0
        id: gcloud
        with:
          service-account-key: ${{ inputs.GCLOUD_AUTH }}

      - name: Add release tag to Docker image
        shell: bash
        run: |
          gcloud container images add-tag \
            ${{ inputs.image }}:${{ github.sha }} \
            ${{ inputs.image }}:${{ steps.release.outputs.release-tag }}

      - name: Deploy to Production
        uses: extenda/actions/cloud-run@v0
        with:
          service-account-key: ${{ inputs.GCLOUD_AUTH }}
          image: ${{ inputs.image }}:${{ steps.release.outputs.release-tag }}
