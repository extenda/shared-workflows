name: 'Run unit tests'
description: 'Run unit tests for the service'
inputs:
  SECRET_AUTH:
    description: 'GCP Auth'
    required: true
runs: 
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-node-modules
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules

    - name: Copy test .env files
      shell: bash
      run: cp test/example.env .env
    - name: Copy .env files
      shell: bash
      run: find . -type f -name '*example.env' -execdir mv {} .env ';'

    - uses: extenda/actions/setup-gcloud@v0
      id: gcloud
      with:
        service-account-key: ${{ inputs.SECRET_AUTH }}

    - name: GCloud configure-docker
      shell: bash
      run: gcloud --quiet auth configure-docker eu.gcr.io

    - name: Start Emulators
      shell: bash
      run: npm run emulators:start

    - name: Cache Sonar binary
      uses: actions/cache@v3
      env:
        cache-name: cache-sonar-binary
      with:
        path: /home/runner/.sonar/native-sonar-scanner
        key: ${{ runner.os }}-cache-sonar-binary
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Auth to Nexus npm registry
      uses: extenda/actions/nexus-auth-npm@v0
      with:
        service-account-key: ${{ inputs.SECRET_AUTH }}

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      shell: bash
      run: npm ci

    - name: Check OpenAPI schema updates
      shell: bash
      run: npm run check-openapi-schema --if-present

    - name: Lint
      shell: bash
      run: npm run lint:ci

    - name: Run type check
      shell: bash
      run: npm run ts:check --if-present

    - name: Run unit tests with coverage
      shell: bash
      run: npm run test:cov

    - name: Analyze with SonarCloud
      uses: extenda/actions/sonar-scanner@v0
      with:
        sonar-host: https://sonarcloud.io
        service-account-key: ${{ inputs.SECRET_AUTH }}
        sonar-scanner: node
